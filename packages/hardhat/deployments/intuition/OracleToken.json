{
  "address": "0x1AA6ad0A70Dd90796F2936BD11F0d4DEF7553b04",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressBlacklisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressUnblacklisted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SUPPLY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "batchTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "blacklistAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blacklisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCirculatingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenInfo",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBlacklisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "minters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recoverETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "unblacklistAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x7443f2cccbba78834b5f4b6b18e5e757070783c2a4ab7022446f18be60d7418e",
  "receipt": {
    "to": null,
    "from": "0xAD50D6A764F10D531A759cc4b651FE3A96c7D03B",
    "contractAddress": "0x1AA6ad0A70Dd90796F2936BD11F0d4DEF7553b04",
    "transactionIndex": 1,
    "gasUsed": "1778466",
    "logsBloom": "0x
    "blockHash": "0x10da483d6a8702731516161b778b6ef688774f238e7862d0250cb5c2e291a73e",
    "transactionHash": "0x7443f2cccbba78834b5f4b6b18e5e757070783c2a4ab7022446f18be60d7418e",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 1748241,
        "transactionHash": "0x7443f2cccbba78834b5f4b6b18e5e757070783c2a4ab7022446f18be60d7418e",
        "address": "0x1AA6ad0A70Dd90796F2936BD11F0d4DEF7553b04",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ad50d6a764f10d531a759cc4b651fe3a96c7d03b"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x10da483d6a8702731516161b778b6ef688774f238e7862d0250cb5c2e291a73e"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 1748241,
        "transactionHash": "0x7443f2cccbba78834b5f4b6b18e5e757070783c2a4ab7022446f18be60d7418e",
        "address": "0x1AA6ad0A70Dd90796F2936BD11F0d4DEF7553b04",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000ad50d6a764f10d531a759cc4b651fe3a96c7d03b"
        ],
        "data": "0x000000000000000000000000000000000000000000084595161401484a000000",
        "logIndex": 1,
        "blockHash": "0x10da483d6a8702731516161b778b6ef688774f238e7862d0250cb5c2e291a73e"
      },
      {
        "transactionIndex": 1,
        "blockNumber": 1748241,
        "transactionHash": "0x7443f2cccbba78834b5f4b6b18e5e757070783c2a4ab7022446f18be60d7418e",
        "address": "0x1AA6ad0A70Dd90796F2936BD11F0d4DEF7553b04",
        "topics": [
          "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6",
          "0x000000000000000000000000ad50d6a764f10d531a759cc4b651fe3a96c7d03b"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x10da483d6a8702731516161b778b6ef688774f238e7862d0250cb5c2e291a73e"
      }
    ],
    "blockNumber": 1748241,
    "cumulativeGasUsed": "1778466",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5376df29b5472dd179f81f54162b896c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressBlacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressUnblacklisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INITIAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"blacklistAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBlacklisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"minters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recoverETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"unblacklistAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"ERC20 token for ORACLE LEND protocol on Intuition testnet\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addMinter(address)\":{\"details\":\"Add a new minter\",\"params\":{\"_minter\":\"Address to add as minter\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"Override approve to include blacklist checks\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"batchTransfer(address[],uint256[])\":{\"details\":\"Batch transfer function for airdrops\",\"params\":{\"amounts\":\"Array of amounts to transfer\",\"recipients\":\"Array of recipient addresses\"}},\"blacklistAccount(address)\":{\"details\":\"Blacklist an account\",\"params\":{\"_account\":\"Address to blacklist\"}},\"burn(uint256)\":{\"details\":\"Burn tokens from caller's balance\",\"params\":{\"_amount\":\"Amount of tokens to burn\"}},\"burnFrom(address,uint256)\":{\"details\":\"Burn tokens from specified account (requires allowance)\",\"params\":{\"_account\":\"Account to burn tokens from\",\"_amount\":\"Amount of tokens to burn\"}},\"constructor\":{\"details\":\"Constructor that gives msg.sender all of existing tokens\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getCirculatingSupply()\":{\"details\":\"Get circulating supply (total supply minus burned tokens)\"},\"getTokenInfo()\":{\"details\":\"Get token information\"},\"isBlacklisted(address)\":{\"details\":\"Check if account is blacklisted\"},\"isMinter(address)\":{\"details\":\"Check if account is a minter\"},\"mint(address,uint256)\":{\"details\":\"Mint new tokens\",\"params\":{\"_amount\":\"Amount of tokens to mint\",\"_to\":\"Address to mint tokens to\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pause token transfers\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"recoverERC20(address,uint256)\":{\"details\":\"Emergency function to recover accidentally sent ERC20 tokens\",\"params\":{\"_amount\":\"Amount to recover\",\"_token\":\"Token contract address\"}},\"recoverETH()\":{\"details\":\"Emergency function to recover accidentally sent ETH\"},\"removeMinter(address)\":{\"details\":\"Remove a minter\",\"params\":{\"_minter\":\"Address to remove from minters\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Override transfer to include blacklist and pause checks\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Override transferFrom to include blacklist and pause checks\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unblacklistAccount(address)\":{\"details\":\"Remove account from blacklist\",\"params\":{\"_account\":\"Address to unblacklist\"}},\"unpause()\":{\"details\":\"Unpause token transfers\"}},\"title\":\"OracleToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ORACLE token with initial supply of 500,000,000,000,000 tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OracleToken.sol\":\"OracleToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     * ```\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Context} from \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys a `value` amount of tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 value) public virtual {\\n        _burn(_msgSender(), value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\\n     * the caller's allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `value`.\\n     */\\n    function burnFrom(address account, uint256 value) public virtual {\\n        _spendAllowance(account, _msgSender(), value);\\n        _burn(account, value);\\n    }\\n}\\n\",\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\"},\"contracts/OracleToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\n\\n/**\\n * @title OracleToken\\n * @dev ERC20 token for ORACLE LEND protocol on Intuition testnet\\n * @notice ORACLE token with initial supply of 500,000,000,000,000 tokens\\n */\\ncontract OracleToken is ERC20, ERC20Burnable, Ownable, Pausable {\\n    \\n    // Constants\\n    uint256 public constant INITIAL_SUPPLY = 10_000_000 * 10**18; // 10 million tokens\\n    uint256 public constant MAX_SUPPLY = 10_000_000 * 10**18; // 10 million max supply\\n    \\n    // State variables\\n    mapping(address => bool) public minters;\\n    mapping(address => bool) public blacklisted;\\n    \\n    // Events\\n    event MinterAdded(address indexed minter);\\n    event MinterRemoved(address indexed minter);\\n    event TokensMinted(address indexed to, uint256 amount);\\n    event TokensBurned(address indexed from, uint256 amount);\\n    event AddressBlacklisted(address indexed account);\\n    event AddressUnblacklisted(address indexed account);\\n\\n    /**\\n     * @dev Constructor that gives msg.sender all of existing tokens\\n     */\\n    constructor() ERC20(\\\"Oracle Token\\\", \\\"ORACLE\\\") Ownable(msg.sender) {\\n        _mint(msg.sender, INITIAL_SUPPLY);\\n        minters[msg.sender] = true;\\n        emit MinterAdded(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Modifier to check if account is not blacklisted\\n     */\\n    modifier notBlacklisted(address account) {\\n        require(!blacklisted[account], \\\"Account is blacklisted\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to check if caller is a minter\\n     */\\n    modifier onlyMinter() {\\n        require(minters[msg.sender], \\\"Caller is not a minter\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Add a new minter\\n     * @param _minter Address to add as minter\\n     */\\n    function addMinter(address _minter) external onlyOwner {\\n        require(_minter != address(0), \\\"Invalid minter address\\\");\\n        require(!minters[_minter], \\\"Address is already a minter\\\");\\n        \\n        minters[_minter] = true;\\n        emit MinterAdded(_minter);\\n    }\\n\\n    /**\\n     * @dev Remove a minter\\n     * @param _minter Address to remove from minters\\n     */\\n    function removeMinter(address _minter) external onlyOwner {\\n        require(minters[_minter], \\\"Address is not a minter\\\");\\n        require(_minter != owner(), \\\"Cannot remove owner from minters\\\");\\n        \\n        minters[_minter] = false;\\n        emit MinterRemoved(_minter);\\n    }\\n\\n    /**\\n     * @dev Mint new tokens\\n     * @param _to Address to mint tokens to\\n     * @param _amount Amount of tokens to mint\\n     */\\n    function mint(address _to, uint256 _amount) external onlyMinter whenNotPaused {\\n        require(_to != address(0), \\\"Cannot mint to zero address\\\");\\n        require(_amount > 0, \\\"Amount must be greater than 0\\\");\\n        require(super.totalSupply() + _amount <= MAX_SUPPLY, \\\"Would exceed max supply\\\");\\n        \\n        _mint(_to, _amount);\\n        emit TokensMinted(_to, _amount);\\n    }\\n\\n    /**\\n     * @dev Burn tokens from caller's balance\\n     * @param _amount Amount of tokens to burn\\n     */\\n    function burn(uint256 _amount) public override whenNotPaused {\\n        super.burn(_amount);\\n        emit TokensBurned(msg.sender, _amount);\\n    }\\n\\n    /**\\n     * @dev Burn tokens from specified account (requires allowance)\\n     * @param _account Account to burn tokens from\\n     * @param _amount Amount of tokens to burn\\n     */\\n    function burnFrom(address _account, uint256 _amount) public override whenNotPaused {\\n        super.burnFrom(_account, _amount);\\n        emit TokensBurned(_account, _amount);\\n    }\\n\\n    /**\\n     * @dev Blacklist an account\\n     * @param _account Address to blacklist\\n     */\\n    function blacklistAccount(address _account) external onlyOwner {\\n        require(_account != address(0), \\\"Cannot blacklist zero address\\\");\\n        require(_account != owner(), \\\"Cannot blacklist owner\\\");\\n        require(!blacklisted[_account], \\\"Account is already blacklisted\\\");\\n        \\n        blacklisted[_account] = true;\\n        emit AddressBlacklisted(_account);\\n    }\\n\\n    /**\\n     * @dev Remove account from blacklist\\n     * @param _account Address to unblacklist\\n     */\\n    function unblacklistAccount(address _account) external onlyOwner {\\n        require(blacklisted[_account], \\\"Account is not blacklisted\\\");\\n        \\n        blacklisted[_account] = false;\\n        emit AddressUnblacklisted(_account);\\n    }\\n\\n    /**\\n     * @dev Pause token transfers\\n     */\\n    function pause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    /**\\n     * @dev Unpause token transfers\\n     */\\n    function unpause() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    /**\\n     * @dev Override transfer to include blacklist and pause checks\\n     */\\n    function transfer(address to, uint256 amount) \\n        public \\n        override \\n        whenNotPaused \\n        notBlacklisted(msg.sender) \\n        notBlacklisted(to) \\n        returns (bool) \\n    {\\n        return super.transfer(to, amount);\\n    }\\n\\n    /**\\n     * @dev Override transferFrom to include blacklist and pause checks\\n     */\\n    function transferFrom(address from, address to, uint256 amount) \\n        public \\n        override \\n        whenNotPaused \\n        notBlacklisted(from) \\n        notBlacklisted(to) \\n        notBlacklisted(msg.sender) \\n        returns (bool) \\n    {\\n        return super.transferFrom(from, to, amount);\\n    }\\n\\n    /**\\n     * @dev Override approve to include blacklist checks\\n     */\\n    function approve(address spender, uint256 amount) \\n        public \\n        override \\n        notBlacklisted(msg.sender) \\n        notBlacklisted(spender) \\n        returns (bool) \\n    {\\n        return super.approve(spender, amount);\\n    }\\n\\n    /**\\n     * @dev Get token information\\n     */\\n    function getTokenInfo() external view returns (\\n        string memory name,\\n        string memory symbol,\\n        uint8 decimals,\\n        uint256 totalSupply,\\n        uint256 maxSupply,\\n        uint256 initialSupply\\n    ) {\\n        return (\\n            super.name(),\\n            super.symbol(),\\n            super.decimals(),\\n            super.totalSupply(),\\n            MAX_SUPPLY,\\n            INITIAL_SUPPLY\\n        );\\n    }\\n\\n    /**\\n     * @dev Check if account is a minter\\n     */\\n    function isMinter(address account) external view returns (bool) {\\n        return minters[account];\\n    }\\n\\n    /**\\n     * @dev Check if account is blacklisted\\n     */\\n    function isBlacklisted(address account) external view returns (bool) {\\n        return blacklisted[account];\\n    }\\n\\n    /**\\n     * @dev Get circulating supply (total supply minus burned tokens)\\n     */\\n    function getCirculatingSupply() external view returns (uint256) {\\n        return super.totalSupply();\\n    }\\n\\n    /**\\n     * @dev Emergency function to recover accidentally sent ERC20 tokens\\n     * @param _token Token contract address\\n     * @param _amount Amount to recover\\n     */\\n    function recoverERC20(address _token, uint256 _amount) external onlyOwner {\\n        require(_token != address(this), \\\"Cannot recover ORACLE tokens\\\");\\n        IERC20(_token).transfer(owner(), _amount);\\n    }\\n\\n    /**\\n     * @dev Emergency function to recover accidentally sent ETH\\n     */\\n    function recoverETH() external onlyOwner {\\n        payable(owner()).transfer(address(this).balance);\\n    }\\n\\n    /**\\n     * @dev Batch transfer function for airdrops\\n     * @param recipients Array of recipient addresses\\n     * @param amounts Array of amounts to transfer\\n     */\\n    function batchTransfer(address[] calldata recipients, uint256[] calldata amounts) \\n        external \\n        whenNotPaused \\n        notBlacklisted(msg.sender) \\n    {\\n        require(recipients.length == amounts.length, \\\"Arrays length mismatch\\\");\\n        require(recipients.length <= 200, \\\"Too many recipients\\\");\\n        \\n        for (uint256 i = 0; i < recipients.length; i++) {\\n            require(!blacklisted[recipients[i]], \\\"Recipient is blacklisted\\\");\\n            require(recipients[i] != address(0), \\\"Invalid recipient address\\\");\\n            _transfer(msg.sender, recipients[i], amounts[i]);\\n        }\\n    }\\n\\n    /**\\n     * @dev Function to receive ETH (for emergency recovery)\\n     */\\n    receive() external payable {}\\n}\\n\",\"keccak256\":\"0x722f667fe72716c22ef0cf1ce5e128727402760b721960022eea4c8767ebbb96\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50336040518060400160405280600c81526020016b27b930b1b632902a37b5b2b760a11b815250604051806040016040528060068152602001654f5241434c4560d01b815250816003908162000068919062000388565b50600462000077828262000388565b5050506001600160a01b038116620000aa57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000b58162000120565b506005805460ff60a01b19169055620000da336a084595161401484a00000062000172565b33600081815260066020526040808220805460ff19166001179055517f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f69190a26200047c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200019e5760405163ec442f0560e01b815260006004820152602401620000a1565b620001ac60008383620001b0565b5050565b6001600160a01b038316620001df578060026000828254620001d3919062000454565b90915550620002539050565b6001600160a01b03831660009081526020819052604090205481811015620002345760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000a1565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002715760028054829003905562000290565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620002d691815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200030e57607f821691505b6020821081036200032f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038357600081815260208120601f850160051c810160208610156200035e5750805b601f850160051c820191505b818110156200037f578281556001016200036a565b5050505b505050565b81516001600160401b03811115620003a457620003a4620002e3565b620003bc81620003b58454620002f9565b8462000335565b602080601f831160018114620003f45760008415620003db5750858301515b600019600386901b1c1916600185901b1785556200037f565b600085815260208120601f198616915b82811015620004255788860151825594840194600190910190840162000404565b5085821015620004445787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200047657634e487b7160e01b600052601160045260246000fd5b92915050565b611c62806200048c6000396000f3fe6080604052600436106101f25760003560e01c8063715018a61161010d578063a9059cbb116100a0578063dbac26e91161006f578063dbac26e914610570578063dd62ed3e146105a0578063f2fde38b146105c0578063f46eccc4146105e0578063fe575a871461061057600080fd5b8063a9059cbb146104d0578063aa271e1a146104f0578063abb1dc4414610529578063d37b34d71461055057600080fd5b80638980f11f116100dc5780638980f11f146104535780638da5cb5b1461047357806395d89b411461049b578063983b2d56146104b057600080fd5b8063715018a6146103e957806379cc6790146103fe5780638456cb591461041e57806388d695b21461043357600080fd5b8063313ce5671161018557806342966c681161015457806342966c68146103545780635c975abb146103745780636d7331ed1461039357806370a08231146103b357600080fd5b8063313ce5671461030357806332cb6b0c146102c45780633f4ba83a1461031f57806340c10f191461033457600080fd5b806323b872dd116101c157806323b872dd1461028f5780632b112e49146102af5780632ff2e9dc146102c45780633092afd5146102e357600080fd5b80630614117a146101fe57806306fdde0314610215578063095ea7b31461024057806318160ddd1461027057600080fd5b366101f957005b600080fd5b34801561020a57600080fd5b50610213610649565b005b34801561022157600080fd5b5061022a61068d565b604051610237919061193f565b60405180910390f35b34801561024c57600080fd5b5061026061025b366004611975565b61071f565b6040519015158152602001610237565b34801561027c57600080fd5b506002545b604051908152602001610237565b34801561029b57600080fd5b506102606102aa36600461199f565b6107a9565b3480156102bb57600080fd5b5061028161086f565b3480156102d057600080fd5b506102816a084595161401484a00000081565b3480156102ef57600080fd5b506102136102fe3660046119db565b61087f565b34801561030f57600080fd5b5060405160128152602001610237565b34801561032b57600080fd5b506102136109a4565b34801561034057600080fd5b5061021361034f366004611975565b6109b6565b34801561036057600080fd5b5061021361036f3660046119f6565b610b7b565b34801561038057600080fd5b50600554600160a01b900460ff16610260565b34801561039f57600080fd5b506102136103ae3660046119db565b610bc4565b3480156103bf57600080fd5b506102816103ce3660046119db565b6001600160a01b031660009081526020819052604090205490565b3480156103f557600080fd5b50610213610c7d565b34801561040a57600080fd5b50610213610419366004611975565b610c8f565b34801561042a57600080fd5b50610213610cdc565b34801561043f57600080fd5b5061021361044e366004611a5b565b610cec565b34801561045f57600080fd5b5061021361046e366004611975565b610f35565b34801561047f57600080fd5b506005546040516001600160a01b039091168152602001610237565b3480156104a757600080fd5b5061022a61102c565b3480156104bc57600080fd5b506102136104cb3660046119db565b61103b565b3480156104dc57600080fd5b506102606104eb366004611975565b611147565b3480156104fc57600080fd5b5061026061050b3660046119db565b6001600160a01b031660009081526006602052604090205460ff1690565b34801561053557600080fd5b5061053e6111c6565b60405161023796959493929190611ac7565b34801561055c57600080fd5b5061021361056b3660046119db565b611203565b34801561057c57600080fd5b5061026061058b3660046119db565b60076020526000908152604090205460ff1681565b3480156105ac57600080fd5b506102816105bb366004611b15565b61137b565b3480156105cc57600080fd5b506102136105db3660046119db565b6113a8565b3480156105ec57600080fd5b506102606105fb3660046119db565b60066020526000908152604090205460ff1681565b34801561061c57600080fd5b5061026061062b3660046119db565b6001600160a01b031660009081526007602052604090205460ff1690565b6106516113e3565b6005546040516001600160a01b03909116904780156108fc02916000818181858888f1935050505015801561068a573d6000803e3d6000fd5b50565b60606003805461069c90611b48565b80601f01602080910402602001604051908101604052809291908181526020018280546106c890611b48565b80156107155780601f106106ea57610100808354040283529160200191610715565b820191906000526020600020905b8154815290600101906020018083116106f857829003601f168201915b5050505050905090565b3360008181526007602052604081205490919060ff161561075b5760405162461bcd60e51b815260040161075290611b82565b60405180910390fd5b6001600160a01b038416600090815260076020526040902054849060ff16156107965760405162461bcd60e51b815260040161075290611b82565b6107a08585611410565b95945050505050565b60006107b3611428565b6001600160a01b038416600090815260076020526040902054849060ff16156107ee5760405162461bcd60e51b815260040161075290611b82565b6001600160a01b038416600090815260076020526040902054849060ff16156108295760405162461bcd60e51b815260040161075290611b82565b3360008181526007602052604090205460ff16156108595760405162461bcd60e51b815260040161075290611b82565b610864878787611453565b979650505050505050565b600061087a60025490565b905090565b6108876113e3565b6001600160a01b03811660009081526006602052604090205460ff166108ef5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f742061206d696e7465720000000000000000006044820152606401610752565b6005546001600160a01b03166001600160a01b0316816001600160a01b03160361095b5760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f742072656d6f7665206f776e65722066726f6d206d696e746572736044820152606401610752565b6001600160a01b038116600081815260066020526040808220805460ff19169055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a250565b6109ac6113e3565b6109b4611477565b565b3360009081526006602052604090205460ff16610a0e5760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba10309036b4b73a32b960511b6044820152606401610752565b610a16611428565b6001600160a01b038216610a6c5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152606401610752565b60008111610abc5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610752565b6a084595161401484a00000081610ad260025490565b610adc9190611bc8565b1115610b2a5760405162461bcd60e51b815260206004820152601760248201527f576f756c6420657863656564206d617820737570706c790000000000000000006044820152606401610752565b610b3482826114cc565b816001600160a01b03167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a427382604051610b6f91815260200190565b60405180910390a25050565b610b83611428565b610b8c81611506565b60405181815233907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb69060200160405180910390a250565b610bcc6113e3565b6001600160a01b03811660009081526007602052604090205460ff16610c345760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e74206973206e6f7420626c61636b6c69737465640000000000006044820152606401610752565b6001600160a01b038116600081815260076020526040808220805460ff19169055517fb2aa8f2cce614e8fceaca560dbaf2a8ed3083e4ab371b10bf6d02e359216767a9190a250565b610c856113e3565b6109b46000611510565b610c97611428565b610ca18282611562565b816001600160a01b03167ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb682604051610b6f91815260200190565b610ce46113e3565b6109b4611577565b610cf4611428565b3360008181526007602052604090205460ff1615610d245760405162461bcd60e51b815260040161075290611b82565b838214610d6c5760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606401610752565b60c8841115610db35760405162461bcd60e51b8152602060048201526013602482015272546f6f206d616e7920726563697069656e747360681b6044820152606401610752565b60005b84811015610f2d5760076000878784818110610dd457610dd4611bdb565b9050602002016020810190610de991906119db565b6001600160a01b0316815260208101919091526040016000205460ff1615610e535760405162461bcd60e51b815260206004820152601860248201527f526563697069656e7420697320626c61636b6c697374656400000000000000006044820152606401610752565b6000868683818110610e6757610e67611bdb565b9050602002016020810190610e7c91906119db565b6001600160a01b031603610ed25760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606401610752565b610f1b33878784818110610ee857610ee8611bdb565b9050602002016020810190610efd91906119db565b868685818110610f0f57610f0f611bdb565b905060200201356115ba565b80610f2581611bf1565b915050610db6565b505050505050565b610f3d6113e3565b306001600160a01b03831603610f955760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f74207265636f766572204f5241434c4520746f6b656e73000000006044820152606401610752565b816001600160a01b031663a9059cbb610fb66005546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611003573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110279190611c0a565b505050565b60606004805461069c90611b48565b6110436113e3565b6001600160a01b0381166110925760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206d696e746572206164647265737360501b6044820152606401610752565b6001600160a01b03811660009081526006602052604090205460ff16156110fb5760405162461bcd60e51b815260206004820152601b60248201527f4164647265737320697320616c72656164792061206d696e74657200000000006044820152606401610752565b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f69190a250565b6000611151611428565b3360008181526007602052604090205460ff16156111815760405162461bcd60e51b815260040161075290611b82565b6001600160a01b038416600090815260076020526040902054849060ff16156111bc5760405162461bcd60e51b815260040161075290611b82565b6107a08585611619565b6060806000806000806111d761068d565b6111df61102c565b6012600254929991985096509094506a084595161401484a00000093508392509050565b61120b6113e3565b6001600160a01b0381166112615760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f7420626c61636b6c697374207a65726f20616464726573730000006044820152606401610752565b6005546001600160a01b03166001600160a01b0316816001600160a01b0316036112c65760405162461bcd60e51b815260206004820152601660248201527521b0b73737ba10313630b1b5b634b9ba1037bbb732b960511b6044820152606401610752565b6001600160a01b03811660009081526007602052604090205460ff161561132f5760405162461bcd60e51b815260206004820152601e60248201527f4163636f756e7420697320616c726561647920626c61636b6c697374656400006044820152606401610752565b6001600160a01b038116600081815260076020526040808220805460ff19166001179055517fdaf49ab9345b6cb75bcb5a7f726bff9183c34dcf5c098c385730f9fd893765f69190a250565b6001600160a01b038083166000908152600160209081526040808320938516835292905220545b92915050565b6113b06113e3565b6001600160a01b0381166113da57604051631e4fbdf760e01b815260006004820152602401610752565b61068a81611510565b6005546001600160a01b031633146109b45760405163118cdaa760e01b8152336004820152602401610752565b60003361141e818585611627565b5060019392505050565b600554600160a01b900460ff16156109b45760405163d93c066560e01b815260040160405180910390fd5b600033611461858285611634565b61146c8585856115ba565b506001949350505050565b61147f61169a565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166114f65760405163ec442f0560e01b815260006004820152602401610752565b611502600083836116c4565b5050565b61068a33826117ee565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61156d823383611634565b61150282826117ee565b61157f611428565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114af3390565b6001600160a01b0383166115e457604051634b637e8f60e11b815260006004820152602401610752565b6001600160a01b03821661160e5760405163ec442f0560e01b815260006004820152602401610752565b6110278383836116c4565b60003361141e8185856115ba565b6110278383836001611824565b6000611640848461137b565b90506000198114611694578181101561168557604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610752565b61169484848484036000611824565b50505050565b600554600160a01b900460ff166109b457604051638dfc202b60e01b815260040160405180910390fd5b6001600160a01b0383166116ef5780600260008282546116e49190611bc8565b909155506117619050565b6001600160a01b038316600090815260208190526040902054818110156117425760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610752565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661177d5760028054829003905561179c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117e191815260200190565b60405180910390a3505050565b6001600160a01b03821661181857604051634b637e8f60e11b815260006004820152602401610752565b611502826000836116c4565b6001600160a01b03841661184e5760405163e602df0560e01b815260006004820152602401610752565b6001600160a01b03831661187857604051634a1406b160e11b815260006004820152602401610752565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561169457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516118eb91815260200190565b60405180910390a350505050565b6000815180845260005b8181101561191f57602081850181015186830182015201611903565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061195260208301846118f9565b9392505050565b80356001600160a01b038116811461197057600080fd5b919050565b6000806040838503121561198857600080fd5b61199183611959565b946020939093013593505050565b6000806000606084860312156119b457600080fd5b6119bd84611959565b92506119cb60208501611959565b9150604084013590509250925092565b6000602082840312156119ed57600080fd5b61195282611959565b600060208284031215611a0857600080fd5b5035919050565b60008083601f840112611a2157600080fd5b50813567ffffffffffffffff811115611a3957600080fd5b6020830191508360208260051b8501011115611a5457600080fd5b9250929050565b60008060008060408587031215611a7157600080fd5b843567ffffffffffffffff80821115611a8957600080fd5b611a9588838901611a0f565b90965094506020870135915080821115611aae57600080fd5b50611abb87828801611a0f565b95989497509550505050565b60c081526000611ada60c08301896118f9565b8281036020840152611aec81896118f9565b91505060ff861660408301528460608301528360808301528260a0830152979650505050505050565b60008060408385031215611b2857600080fd5b611b3183611959565b9150611b3f60208401611959565b90509250929050565b600181811c90821680611b5c57607f821691505b602082108103611b7c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601690820152751058d8dbdd5b9d081a5cc8189b1858dadb1a5cdd195960521b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156113a2576113a2611bb2565b634e487b7160e01b600052603260045260246000fd5b600060018201611c0357611c03611bb2565b5060010190565b600060208284031215611c1c57600080fd5b8151801515811461195257600080fdfea264697066735822122098d16d9dae79dbd02eba94d5dd545cc0260da773224a525416f3771ee73d3ee964736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106101f25760003560e01c8063715018a61161010d578063a9059cbb116100a0578063dbac26e91161006f578063dbac26e914610570578063dd62ed3e146105a0578063f2fde38b146105c0578063f46eccc4146105e0578063fe575a871461061057600080fd5b8063a9059cbb146104d0578063aa271e1a146104f0578063abb1dc4414610529578063d37b34d71461055057600080fd5b80638980f11f116100dc5780638980f11f146104535780638da5cb5b1461047357806395d89b411461049b578063983b2d56146104b057600080fd5b8063715018a6146103e957806379cc6790146103fe5780638456cb591461041e57806388d695b21461043357600080fd5b8063313ce5671161018557806342966c681161015457806342966c68146103545780635c975abb146103745780636d7331ed1461039357806370a08231146103b357600080fd5b8063313ce5671461030357806332cb6b0c146102c45780633f4ba83a1461031f57806340c10f191461033457600080fd5b806323b872dd116101c157806323b872dd1461028f5780632b112e49146102af5780632ff2e9dc146102c45780633092afd5146102e357600080fd5b80630614117a146101fe57806306fdde0314610215578063095ea7b31461024057806318160ddd1461027057600080fd5b366101f957005b600080fd5b34801561020a57600080fd5b50610213610649565b005b34801561022157600080fd5b5061022a61068d565b604051610237919061193f565b60405180910390f35b34801561024c57600080fd5b5061026061025b366004611975565b61071f565b6040519015158152602001610237565b34801561027c57600080fd5b506002545b604051908152602001610237565b34801561029b57600080fd5b506102606102aa36600461199f565b6107a9565b3480156102bb57600080fd5b5061028161086f565b3480156102d057600080fd5b506102816a084595161401484a00000081565b3480156102ef57600080fd5b506102136102fe3660046119db565b61087f565b34801561030f57600080fd5b5060405160128152602001610237565b34801561032b57600080fd5b506102136109a4565b34801561034057600080fd5b5061021361034f366004611975565b6109b6565b34801561036057600080fd5b5061021361036f3660046119f6565b610b7b565b34801561038057600080fd5b50600554600160a01b900460ff16610260565b34801561039f57600080fd5b506102136103ae3660046119db565b610bc4565b3480156103bf57600080fd5b506102816103ce3660046119db565b6001600160a01b031660009081526020819052604090205490565b3480156103f557600080fd5b50610213610c7d565b34801561040a57600080fd5b50610213610419366004611975565b610c8f565b34801561042a57600080fd5b50610213610cdc565b34801561043f57600080fd5b5061021361044e366004611a5b565b610cec565b34801561045f57600080fd5b5061021361046e366004611975565b610f35565b34801561047f57600080fd5b506005546040516001600160a01b039091168152602001610237565b3480156104a757600080fd5b5061022a61102c565b3480156104bc57600080fd5b506102136104cb3660046119db565b61103b565b3480156104dc57600080fd5b506102606104eb366004611975565b611147565b3480156104fc57600080fd5b5061026061050b3660046119db565b6001600160a01b031660009081526006602052604090205460ff1690565b34801561053557600080fd5b5061053e6111c6565b60405161023796959493929190611ac7565b34801561055c57600080fd5b5061021361056b3660046119db565b611203565b34801561057c57600080fd5b5061026061058b3660046119db565b60076020526000908152604090205460ff1681565b3480156105ac57600080fd5b506102816105bb366004611b15565b61137b565b3480156105cc57600080fd5b506102136105db3660046119db565b6113a8565b3480156105ec57600080fd5b506102606105fb3660046119db565b60066020526000908152604090205460ff1681565b34801561061c57600080fd5b5061026061062b3660046119db565b6001600160a01b031660009081526007602052604090205460ff1690565b6106516113e3565b6005546040516001600160a01b03909116904780156108fc02916000818181858888f1935050505015801561068a573d6000803e3d6000fd5b50565b60606003805461069c90611b48565b80601f01602080910402602001604051908101604052809291908181526020018280546106c890611b48565b80156107155780601f106106ea57610100808354040283529160200191610715565b820191906000526020600020905b8154815290600101906020018083116106f857829003601f168201915b5050505050905090565b3360008181526007602052604081205490919060ff161561075b5760405162461bcd60e51b815260040161075290611b82565b60405180910390fd5b6001600160a01b038416600090815260076020526040902054849060ff16156107965760405162461bcd60e51b815260040161075290611b82565b6107a08585611410565b95945050505050565b60006107b3611428565b6001600160a01b038416600090815260076020526040902054849060ff16156107ee5760405162461bcd60e51b815260040161075290611b82565b6001600160a01b038416600090815260076020526040902054849060ff16156108295760405162461bcd60e51b815260040161075290611b82565b3360008181526007602052604090205460ff16156108595760405162461bcd60e51b815260040161075290611b82565b610864878787611453565b979650505050505050565b600061087a60025490565b905090565b6108876113e3565b6001600160a01b03811660009081526006602052604090205460ff166108ef5760405162461bcd60e51b815260206004820152601760248201527f41646472657373206973206e6f742061206d696e7465720000000000000000006044820152606401610752565b6005546001600160a01b03166001600160a01b0316816001600160a01b03160361095b5760405162461bcd60e51b815260206004820181905260248201527f43616e6e6f742072656d6f7665206f776e65722066726f6d206d696e746572736044820152606401610752565b6001600160a01b038116600081815260066020526040808220805460ff19169055517fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb666929190a250565b6109ac6113e3565b6109b4611477565b565b3360009081526006602052604090205460ff16610a0e5760405162461bcd60e51b815260206004820152601660248201527521b0b63632b91034b9903737ba10309036b4b73a32b960511b6044820152606401610752565b610a16611428565b6001600160a01b038216610a6c5760405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152606401610752565b60008111610abc5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610752565b6a084595161401484a00000081610ad260025490565b610adc9190611bc8565b1115610b2a5760405162461bcd60e51b815260206004820152601760248201527f576f756c6420657863656564206d617820737570706c790000000000000000006044820152606401610752565b610b3482826114cc565b816001600160a01b03167f3f2c9d57c068687834f0de942a9babb9e5acab57d516d3480a3c16ee165a427382604051610b6f91815260200190565b60405180910390a25050565b610b83611428565b610b8c81611506565b60405181815233907ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb69060200160405180910390a250565b610bcc6113e3565b6001600160a01b03811660009081526007602052604090205460ff16610c345760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e74206973206e6f7420626c61636b6c69737465640000000000006044820152606401610752565b6001600160a01b038116600081815260076020526040808220805460ff19169055517fb2aa8f2cce614e8fceaca560dbaf2a8ed3083e4ab371b10bf6d02e359216767a9190a250565b610c856113e3565b6109b46000611510565b610c97611428565b610ca18282611562565b816001600160a01b03167ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb682604051610b6f91815260200190565b610ce46113e3565b6109b4611577565b610cf4611428565b3360008181526007602052604090205460ff1615610d245760405162461bcd60e51b815260040161075290611b82565b838214610d6c5760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606401610752565b60c8841115610db35760405162461bcd60e51b8152602060048201526013602482015272546f6f206d616e7920726563697069656e747360681b6044820152606401610752565b60005b84811015610f2d5760076000878784818110610dd457610dd4611bdb565b9050602002016020810190610de991906119db565b6001600160a01b0316815260208101919091526040016000205460ff1615610e535760405162461bcd60e51b815260206004820152601860248201527f526563697069656e7420697320626c61636b6c697374656400000000000000006044820152606401610752565b6000868683818110610e6757610e67611bdb565b9050602002016020810190610e7c91906119db565b6001600160a01b031603610ed25760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606401610752565b610f1b33878784818110610ee857610ee8611bdb565b9050602002016020810190610efd91906119db565b868685818110610f0f57610f0f611bdb565b905060200201356115ba565b80610f2581611bf1565b915050610db6565b505050505050565b610f3d6113e3565b306001600160a01b03831603610f955760405162461bcd60e51b815260206004820152601c60248201527f43616e6e6f74207265636f766572204f5241434c4520746f6b656e73000000006044820152606401610752565b816001600160a01b031663a9059cbb610fb66005546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015611003573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110279190611c0a565b505050565b60606004805461069c90611b48565b6110436113e3565b6001600160a01b0381166110925760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206d696e746572206164647265737360501b6044820152606401610752565b6001600160a01b03811660009081526006602052604090205460ff16156110fb5760405162461bcd60e51b815260206004820152601b60248201527f4164647265737320697320616c72656164792061206d696e74657200000000006044820152606401610752565b6001600160a01b038116600081815260066020526040808220805460ff19166001179055517f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f69190a250565b6000611151611428565b3360008181526007602052604090205460ff16156111815760405162461bcd60e51b815260040161075290611b82565b6001600160a01b038416600090815260076020526040902054849060ff16156111bc5760405162461bcd60e51b815260040161075290611b82565b6107a08585611619565b6060806000806000806111d761068d565b6111df61102c565b6012600254929991985096509094506a084595161401484a00000093508392509050565b61120b6113e3565b6001600160a01b0381166112615760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f7420626c61636b6c697374207a65726f20616464726573730000006044820152606401610752565b6005546001600160a01b03166001600160a01b0316816001600160a01b0316036112c65760405162461bcd60e51b815260206004820152601660248201527521b0b73737ba10313630b1b5b634b9ba1037bbb732b960511b6044820152606401610752565b6001600160a01b03811660009081526007602052604090205460ff161561132f5760405162461bcd60e51b815260206004820152601e60248201527f4163636f756e7420697320616c726561647920626c61636b6c697374656400006044820152606401610752565b6001600160a01b038116600081815260076020526040808220805460ff19166001179055517fdaf49ab9345b6cb75bcb5a7f726bff9183c34dcf5c098c385730f9fd893765f69190a250565b6001600160a01b038083166000908152600160209081526040808320938516835292905220545b92915050565b6113b06113e3565b6001600160a01b0381166113da57604051631e4fbdf760e01b815260006004820152602401610752565b61068a81611510565b6005546001600160a01b031633146109b45760405163118cdaa760e01b8152336004820152602401610752565b60003361141e818585611627565b5060019392505050565b600554600160a01b900460ff16156109b45760405163d93c066560e01b815260040160405180910390fd5b600033611461858285611634565b61146c8585856115ba565b506001949350505050565b61147f61169a565b6005805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166114f65760405163ec442f0560e01b815260006004820152602401610752565b611502600083836116c4565b5050565b61068a33826117ee565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61156d823383611634565b61150282826117ee565b61157f611428565b6005805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114af3390565b6001600160a01b0383166115e457604051634b637e8f60e11b815260006004820152602401610752565b6001600160a01b03821661160e5760405163ec442f0560e01b815260006004820152602401610752565b6110278383836116c4565b60003361141e8185856115ba565b6110278383836001611824565b6000611640848461137b565b90506000198114611694578181101561168557604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610752565b61169484848484036000611824565b50505050565b600554600160a01b900460ff166109b457604051638dfc202b60e01b815260040160405180910390fd5b6001600160a01b0383166116ef5780600260008282546116e49190611bc8565b909155506117619050565b6001600160a01b038316600090815260208190526040902054818110156117425760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610752565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661177d5760028054829003905561179c565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117e191815260200190565b60405180910390a3505050565b6001600160a01b03821661181857604051634b637e8f60e11b815260006004820152602401610752565b611502826000836116c4565b6001600160a01b03841661184e5760405163e602df0560e01b815260006004820152602401610752565b6001600160a01b03831661187857604051634a1406b160e11b815260006004820152602401610752565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561169457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516118eb91815260200190565b60405180910390a350505050565b6000815180845260005b8181101561191f57602081850181015186830182015201611903565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061195260208301846118f9565b9392505050565b80356001600160a01b038116811461197057600080fd5b919050565b6000806040838503121561198857600080fd5b61199183611959565b946020939093013593505050565b6000806000606084860312156119b457600080fd5b6119bd84611959565b92506119cb60208501611959565b9150604084013590509250925092565b6000602082840312156119ed57600080fd5b61195282611959565b600060208284031215611a0857600080fd5b5035919050565b60008083601f840112611a2157600080fd5b50813567ffffffffffffffff811115611a3957600080fd5b6020830191508360208260051b8501011115611a5457600080fd5b9250929050565b60008060008060408587031215611a7157600080fd5b843567ffffffffffffffff80821115611a8957600080fd5b611a9588838901611a0f565b90965094506020870135915080821115611aae57600080fd5b50611abb87828801611a0f565b95989497509550505050565b60c081526000611ada60c08301896118f9565b8281036020840152611aec81896118f9565b91505060ff861660408301528460608301528360808301528260a0830152979650505050505050565b60008060408385031215611b2857600080fd5b611b3183611959565b9150611b3f60208401611959565b90509250929050565b600181811c90821680611b5c57607f821691505b602082108103611b7c57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601690820152751058d8dbdd5b9d081a5cc8189b1858dadb1a5cdd195960521b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b808201808211156113a2576113a2611bb2565b634e487b7160e01b600052603260045260246000fd5b600060018201611c0357611c03611bb2565b5060010190565b600060208284031215611c1c57600080fd5b8151801515811461195257600080fdfea264697066735822122098d16d9dae79dbd02eba94d5dd545cc0260da773224a525416f3771ee73d3ee964736f6c63430008140033",
  "devdoc": {
    "details": "ERC20 token for ORACLE LEND protocol on Intuition testnet",
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "addMinter(address)": {
        "details": "Add a new minter",
        "params": {
          "_minter": "Address to add as minter"
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "Override approve to include blacklist checks"
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "batchTransfer(address[],uint256[])": {
        "details": "Batch transfer function for airdrops",
        "params": {
          "amounts": "Array of amounts to transfer",
          "recipients": "Array of recipient addresses"
        }
      },
      "blacklistAccount(address)": {
        "details": "Blacklist an account",
        "params": {
          "_account": "Address to blacklist"
        }
      },
      "burn(uint256)": {
        "details": "Burn tokens from caller's balance",
        "params": {
          "_amount": "Amount of tokens to burn"
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burn tokens from specified account (requires allowance)",
        "params": {
          "_account": "Account to burn tokens from",
          "_amount": "Amount of tokens to burn"
        }
      },
      "constructor": {
        "details": "Constructor that gives msg.sender all of existing tokens"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "getCirculatingSupply()": {
        "details": "Get circulating supply (total supply minus burned tokens)"
      },
      "getTokenInfo()": {
        "details": "Get token information"
      },
      "isBlacklisted(address)": {
        "details": "Check if account is blacklisted"
      },
      "isMinter(address)": {
        "details": "Check if account is a minter"
      },
      "mint(address,uint256)": {
        "details": "Mint new tokens",
        "params": {
          "_amount": "Amount of tokens to mint",
          "_to": "Address to mint tokens to"
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Pause token transfers"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "recoverERC20(address,uint256)": {
        "details": "Emergency function to recover accidentally sent ERC20 tokens",
        "params": {
          "_amount": "Amount to recover",
          "_token": "Token contract address"
        }
      },
      "recoverETH()": {
        "details": "Emergency function to recover accidentally sent ETH"
      },
      "removeMinter(address)": {
        "details": "Remove a minter",
        "params": {
          "_minter": "Address to remove from minters"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "Override transfer to include blacklist and pause checks"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Override transferFrom to include blacklist and pause checks"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unblacklistAccount(address)": {
        "details": "Remove account from blacklist",
        "params": {
          "_account": "Address to unblacklist"
        }
      },
      "unpause()": {
        "details": "Unpause token transfers"
      }
    },
    "title": "OracleToken",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "ORACLE token with initial supply of 500,000,000,000,000 tokens",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 307,
        "contract": "contracts/OracleToken.sol:OracleToken",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 313,
        "contract": "contracts/OracleToken.sol:OracleToken",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 315,
        "contract": "contracts/OracleToken.sol:OracleToken",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 317,
        "contract": "contracts/OracleToken.sol:OracleToken",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 319,
        "contract": "contracts/OracleToken.sol:OracleToken",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 8,
        "contract": "contracts/OracleToken.sol:OracleToken",
        "label": "_owner",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 988,
        "contract": "contracts/OracleToken.sol:OracleToken",
        "label": "_paused",
        "offset": 20,
        "slot": "5",
        "type": "t_bool"
      },
      {
        "astId": 1129,
        "contract": "contracts/OracleToken.sol:OracleToken",
        "label": "minters",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1133,
        "contract": "contracts/OracleToken.sol:OracleToken",
        "label": "blacklisted",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}